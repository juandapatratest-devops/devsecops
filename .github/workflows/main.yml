name: Notes App CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # -------------------------
  # 1. Unit Test (pytest)
  # -------------------------
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          pip install pytest

      - name: Run Unit Tests
        run: pytest --maxfail=1 --disable-warnings -q

  # -------------------------
  # 2. SAST (Bandit)
  # -------------------------
  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run Bandit Scan
        run: bandit -r . -ll

  # -------------------------
  # 3. SCA (pip-audit)
  # -------------------------
  sca:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pip-audit

    - name: Run pip-audit
      run: |
        source venv/bin/activate
        pip-audit -r requirements.txt

  # -------------------------
  # 4. Secret Scan (Gitleaks)
  # -------------------------
  secret_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: zricethezav/gitleaks-action@v2
        with:
          args: detect --source . --no-git --redact

  # -------------------------
  # 5. Build & Push Docker Image
  # -------------------------
  build_and_push:
    runs-on: ubuntu-latest
    needs: [unit_test, sast, sca, secret_scan]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:latest .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:latest \
            ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:${{ github.sha }}

  # -------------------------
  # 6. Image Scan (Trivy)
  # -------------------------
  image_scan:
    runs-on: ubuntu-latest
    needs: [build_and_push]
    steps:
      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:latest
          format: table
          exit-code: 0
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
